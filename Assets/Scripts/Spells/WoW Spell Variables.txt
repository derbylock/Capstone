struct SpellEntry {
   0 m_ID uint32 Category; 
   1 m_category uint32 Dispel; 
   2 m_dispelType uint32 Mechanic; 
   3 m_mechanic uint32 Attributes; 
   4 m_attribute uint32 AttributesEx; 
   5 m_attributesEx uint32 AttributesEx2; 
   6 m_attributesExB uint32 AttributesEx3; 
   7 m_attributesExC uint32 AttributesEx4; 
   8 m_attributesExD uint32 AttributesEx5; 
   9 m_attributesExE uint32 AttributesEx6; 
   10 m_attributesExF uint32 AttributesEx7; 
   11 3.2.0 (0x20 - totems, 0x4 - paladin auras, etc...) --- Even more attributes needed, thanks MrLama for this uint32 Stances; 
   12 m_shapeshiftMask uint32 unk_320_2; 
   13 3.2.0 uint32 StancesNot; 
   14 m_shapeshiftExclude uint32 unk_320_3; 
   15 3.2.0 uint32 Targets; 
   16 m_targets uint32 TargetCreatureType; 
   17 m_targetCreatureType uint32 RequiresSpellFocus;
   18 m_requiresSpellFocus uint32 FacingCasterFlags;
   19 m_facingCasterFlags uint32 CasterAuraState; 
   20 m_casterAuraState uint32 TargetAuraState; 
   21 m_targetAuraState uint32 CasterAuraStateNot; 
   22 m_excludeCasterAuraState uint32 TargetAuraStateNot; 
   23 m_excludeTargetAuraState uint32 casterAuraSpell; 
   24 m_casterAuraSpell uint32 targetAuraSpell;
   25 m_targetAuraSpell uint32 excludeCasterAuraSpell; 
   26 m_excludeCasterAuraSpell uint32 excludeTargetAuraSpell;
   27 m_excludeTargetAuraSpell uint32 CastingTimeIndex; 
   28 m_castingTimeIndex uint32 RecoveryTime;
   29 m_recoveryTime uint32 CategoryRecoveryTime; 
   30 m_categoryRecoveryTime uint32 InterruptFlags; 
   31 m_interruptFlags uint32 AuraInterruptFlags; 
   32 m_auraInterruptFlags uint32 ChannelInterruptFlags;
   33 m_channelInterruptFlags uint32 procFlags; 
   34 m_procTypeMask uint32 procChance; 
   35 m_procChance uint32 procCharges; 
   36 m_procCharges uint32 maxLevel; 
   37 m_maxLevel uint32 baseLevel; 
   38 m_baseLevel uint32 spellLevel; 
   39 m_spellLevel uint32 DurationIndex; 
   40 m_durationIndex uint32 powerType;
   41 m_powerType uint32 manaCost; 
   42 m_manaCost uint32 manaCostPerlevel; 
   43 m_manaCostPerLevel uint32 manaPerSecond; 
   44 m_manaPerSecond uint32 manaPerSecondPerLevel;
   45 m_manaPerSecondPerLeve uint32 rangeIndex; 
   46 m_rangeIndex float speed; 
   47 m_speed uint32 modalNextSpell; 
   48 m_modalNextSpell uint32 StackAmount;
   49 m_cumulativeAura uint32 Totem[2];
   50-51 m_totem int32 Reagent[8]; 
   52-59 m_reagent uint32 ReagentCount[8]; 
   60-67 m_reagentCount int32 EquippedItemClass;
   68 m_equippedItemClass (value) int32 EquippedItemSubClassMask;
   69 m_equippedItemSubclass (mask) int32 EquippedItemInventoryTypeMask; 
   70 m_equippedItemInvTypes (mask) uint32 Effect[3]; 
   71-73 m_effect int32 EffectDieSides[3]; 
   74-76 m_effectDieSides float EffectRealPointsPerLevel[3]; 
   77-79 m_effectRealPointsPerLevel int32 EffectBasePoints[3]; 
   80-82 m_effectBasePoints (don't must be used in spell/auras explicitly, must be used cached Spell::m_currentBasePoints) uint32 EffectMechanic[3]; 
   83-85 m_effectMechanic uint32 EffectImplicitTargetA[3]; 
   86-88 m_implicitTargetA uint32 EffectImplicitTargetB[3];
   89-91 m_implicitTargetB uint32 EffectRadiusIndex[3];
   92-94 m_effectRadiusIndex - spellradius.dbc uint32 EffectApplyAuraName[3]; 
   95-97 m_effectAura uint32 EffectAmplitude[3];
   98-100 m_effectAuraPeriod float EffectMultipleValue[3];
   101-103 m_effectAmplitude uint32 EffectChainTarget[3];
   104-106 m_effectChainTargets uint32 EffectItemType[3];
   107-109 m_effectItemType int32 EffectMiscValue[3]; 
   110-112 m_effectMiscValue int32 EffectMiscValueB[3]; 
   113-115 m_effectMiscValueB uint32 EffectTriggerSpell[3]; 
   116-118 m_effectTriggerSpell float EffectPointsPerComboPoint[3];
   119-121 m_effectPointsPerCombo uint32 EffectSpellClassMaskA[3];
   122-124 m_effectSpellClassMaskA, effect 0 uint32 EffectSpellClassMaskB[3];
   125-127 m_effectSpellClassMaskB, effect 1 uint32 EffectSpellClassMaskC[3]; 
   128-130 m_effectSpellClassMaskC, effect 2 uint32 SpellVisual[2];
   131-132 m_spellVisualID uint32 SpellIconID;
   133 m_spellIconID uint32 activeIconID;
   134 m_activeIconID uint32 spellPriority; 
   135 m_spellPriority char* SpellName[16]; 
   136-151 m_name_lang uint32 SpellNameFlag; 
   152 char* Rank[16]; 
   153-168 m_nameSubtext_lang uint32 RankFlags; 
   169 char* Description[16];
   170-185 m_description_lang uint32 DescriptionFlags; 
   186 char* ToolTip[16]; 
   187-202 m_auraDescription_lang uint32 ToolTipFlags; 
   203 uint32 ManaCostPercentage; 
   204 m_manaCostPct uint32 StartRecoveryCategory; 
   205 m_startRecoveryCategory uint32 StartRecoveryTime; 
   206 m_startRecoveryTime uint32 MaxTargetLevel; 
   207 m_maxTargetLevel uint32 SpellFamilyName; 
   208 m_spellClassSet uint64 SpellFamilyFlags; 
   209-210 m_spellClassMask NOTE: size is 12 bytes!!! uint32 SpellFamilyFlags2; 
   211 addition to m_spellClassMask uint32 MaxAffectedTargets; 
   212 m_maxTargets uint32 DmgClass; 
   213 m_defenseType uint32 PreventionType; 
   214 m_preventionType uint32 StanceBarOrder; 
   215 m_stanceBarOrder float DmgMultiplier[3]; 
   216-218 m_effectChainAmplitude uint32 MinFactionId; 
   219 m_minFactionID uint32 MinReputation;
   220 m_minReputation uint32 RequiredAuraVision;
   221 m_requiredAuraVision uint32 TotemCategory[2]; 
   222-223 m_requiredTotemCategoryID int32 AreaGroupId;
   224 m_requiredAreaGroupId uint32 SchoolMask; 
   225 m_schoolMask uint32 runeCostID; 
   226 m_runeCostID uint32 spellMissileID; 
   227 m_spellMissileID uint32 PowerDisplayId; 
   228 PowerDisplay.dbc, new in 3.1 float unk_320_4[3];
   229-231 3.2.0 uint32 spellDescriptionVariableID;
   232 3.2.0 uint32 SpellDifficultyId; 
   233 3.3.0 
}